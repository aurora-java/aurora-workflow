package aurora.bpm.command.sqlje;

import uncertain.composite.*;
import java.util.List;
import aurora.bpm.command.beans.*;

public class DefaultRecipientRules {

	public BpmnDocumentReference getDocumentReference(Long instance_id) throws Exception{
		BpmnDocumentReference doc_ref = #{select *
			  from bpmn_document_reference
			  where category_id = (select d.category_id
			                         from bpmn_process_define d, bpmn_process_instance i
			                        where d.process_code = i.process_code
			                          and d.process_version = i.process_version
			                          and i.instance_id = ${instance_id})
		};
		return doc_ref;
	}

	/**
	 * 取得单据ID
	 */
	public Long getInstanceParam(Long instance_id) throws Exception{
		Long instance_param = #{select instance_param from bpmn_process_instance where instance_id=${instance_id}};
		return instance_param;
	}

	/**
	 * 
	 */
	public Long getInstanceCompany(Long instance_id) throws Exception {
		try {
			BpmnDocumentReference doc_ref = getDocumentReference(instance_id);
			Long instance_param = getInstanceParam(instance_id);
			Long comapny_id=#{
				select ${! doc_ref.ref_company_column_name} 
				from ${! doc_ref.document_table_name} z
				where ${! doc_ref.ref_id_column_name} = ${instance_param}
			};
			return comapny_id;
		}catch(NoDataFoundException e) {
			return null;
		}
	}

	/**
	 * 取申请者 岗位(position_id)
	 */
	public List<Long> getDocumentPosition(Long instance_id) throws Exception{
		BpmnDocumentReference doc_ref = getDocumentReference(instance_id);
		Long instance_param = getInstanceParam(instance_id);
		List<Long> list = #{
			select distinct position_id 
			from ${! "("+doc_ref.ref_detail+")"} z
			where ${! doc_ref.ref_id_column_name} = ${instance_param}
		};
		return list;
	}

	/**
	 * 取 申请者(employee_id)
	 */
	public List<Long> getDocumentEmployee(Long instance_id) throws Exception{
		BpmnDocumentReference doc_ref = getDocumentReference(instance_id);
		Long instance_param = getInstanceParam(instance_id);
		List<Long> list = #{
			select distinct employee_id 
			from ${! "("+doc_ref.ref_detail+")"} z
			where ${! doc_ref.ref_id_column_name} = ${instance_param}
		};
		return list;
	}

	/**
	 * 取得申请者部门(unit_id)
	 */
	public List<Long> getDocumentUnit(Long instance_id) throws Exception{
		BpmnDocumentReference doc_ref = getDocumentReference(instance_id);
		Long instance_param = getInstanceParam(instance_id);
		List<Long> list = #{
			select distinct unit_id 
			from ${! "("+doc_ref.ref_detail+")"} z
			where ${! doc_ref.ref_id_column_name} = ${instance_param}
		};
		return list;
	}

	public Long insertBpmInstanceNodeHirc(Long instance_id, Long usertask_id,
			Long seq_number, Long approver_id, String posted_flag,
			String disabled_flag, String note, Long rule_record_id,
			Long rule_detail_id, Long user_id, String added_order)
			throws Exception {
		BpmnInstanceNodeHierarchy hir = new BpmnInstanceNodeHierarchy();
		hir.instance_id = instance_id;
		hir.usertask_id = usertask_id;
		hir.seq_number = seq_number;
		hir.approver_id = approver_id;
		hir.posted_flag = posted_flag;
		hir.disabled_flag = disabled_flag;
		hir.note = note;
		hir.rule_record_id = rule_record_id;
		hir.rule_detail_id = rule_detail_id;
		hir.added_order = added_order;
		$sql.insert(hir);
		return hir.hierarchy_record_id;
	}

	public Long insertBpmInstanceNodeHirc(Long	seq_number,
					Long	approver_id,
					String	note,
					Long	rule_record_id,
					Long	rule_detail_id,
					Long	user_id,
					String	added_order) throws Exception{
		BpmnInstanceNodeRule rule_record = #{select * from bpmn_instance_node_rule where rule_record_id = ${rule_record_id}};
		return insertBpmInstanceNodeHirc(rule_record.instance_id,
											rule_record.usertask_id,
											seq_number,
											approver_id,
											"N",
											"N",
											note,
											rule_record_id,
											rule_detail_id,
											user_id,
											added_order);
	}

	public static boolean eq(Object o1, Object o2) {
		if (o1 == null)
			return o2 == null;
		return o1.equals(o2);
	}

	// /////////////////////////////////////////////////
	public void getEmployeeGrandmanager(String param1,String param2,String param3,String param4,Long rule_record_id) throws Exception {
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id=${rule_record_id}};
		Long company_id = getInstanceCompany(node_rule.instance_id);
		List<Long> positions = getDocumentPosition(node_rule.instance_id);
		if(positions.size()==0)
			return;
		for(Long position_id:positions) {
			for(Long parent_position:#{select parent_position_id
				from wfl_position_v
				where position_id = ${position_id}}) {
				for(Long grandparent_position:#{select parent_position_id
						from wfl_position_v
						where position_id = ${parent_position}}) {
					for(Long approver_id:#{SELECT DISTINCT u.user_id
                            FROM wfl_employee_assigns_v a, wfl_users_v u
                           WHERE a.position_id = ${grandparent_position}
                             AND a.employee_id = u.employee_id
                             AND a.company_id = ${company_id}}) {
						insertBpmInstanceNodeHirc(node_rule.recipient_sequence,
								approver_id,
								"",
								rule_record_id,
								null,
								1L,
								null);
					}
				}
			}
			
		}
	}

	// /
	public void getEmployee(String param1,String param2,String param3,String param4,Long rule_record_id) throws Exception {
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id = ${rule_record_id}};
		
		List<Long> emps = getDocumentEmployee(node_rule.instance_id);
		if(emps.size() ==0)
			return;
		for(Long document_employee_id : emps) {
			for(Long approver_id:#{select distinct u.user_id
									from wfl_users_v u
									where u.employee_id=${document_employee_id}}) {
				insertBpmInstanceNodeHirc(
						node_rule.recipient_sequence,
						approver_id,
						"",
						rule_record_id,
						null,
						1L,
						null);
			}
		}
	}

	/**
	 * 取得申请者部门主管
	 */
	public void getEmployeeUnitManager(String param1, String param2, String param3,
			String param4, Long rule_record_id) throws Exception {
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id=${rule_record_id}};
		Long company_id = getInstanceCompany(node_rule.instance_id);
		List<Long> positions = getDocumentPosition(node_rule.instance_id);
		if(positions.size()==0)
			return;
		for(Long position_id:positions) {
			for(Long chief_position_id:#{SELECT n.chief_position_id
	                FROM wfl_position_v p, wfl_unit_v n
	               WHERE p.position_id = ${position_id}
	                 AND p.unit_id = n.unit_id}) {
				for(Long approver_id:#{SELECT DISTINCT u.user_id
	                    FROM wfl_employee_assigns_v a, wfl_users_v u
	                   WHERE a.position_id = ${chief_position_id}
	                     AND a.employee_id = u.employee_id
	                     AND a.company_id = ${company_id}}) {
					insertBpmInstanceNodeHirc(node_rule.recipient_sequence,
												approver_id,
												"",
												rule_record_id,
												null,
												1L,
												null);
				}
			}
		}
	}

	/**
	 * 取得申请者主管
	 */
	public void getEmployeeManager(String param1, String param2, String param3,
			String param4, Long rule_record_id) throws Exception {
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id=${rule_record_id}};
		Long company_id = getInstanceCompany(node_rule.instance_id);
		List<Long> document_positions = getDocumentPosition(node_rule.instance_id);
		if(document_positions.size() == 0) {
			return;
		}
		
		for(Long document_position_id : document_positions) {
			for(Long parent_position : #{select parent_position_id from wfl_position_v where position_id=${document_position_id} 
									}) {
				for(Long approver_id : #{SELECT DISTINCT u.user_id
                              FROM wfl_employee_assigns_v a, wfl_users_v u
                             WHERE a.position_id = ${parent_position}
                               AND a.employee_id = u.employee_id
                               AND a.company_id = ${company_id}}) {
					insertBpmInstanceNodeHirc(node_rule.recipient_sequence,
							approver_id,
							"",
							rule_record_id,
							null,
							1L,
							null);
				}
			}
		}
	}


	public void getEmployeeCompanyManager(String param1, String param2,
			String param3, String param4, Long rule_record_id) throws Exception {
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id=${rule_record_id}};
		Long company_id = getInstanceCompany(node_rule.instance_id);
		for(Long chief_position :#{SELECT chief_position_id
                               FROM wfl_companies_v
                              WHERE company_id = ${company_id}}) {
			for(Long approver_id:#{SELECT DISTINCT u.user_id
                            FROM wfl_employee_assigns_v a, wfl_users_v u
                           WHERE a.position_id = ${chief_position}
                             AND a.employee_id = u.employee_id
                             AND a.company_id = ${company_id}}) {
				insertBpmInstanceNodeHirc(node_rule.recipient_sequence,
						approver_id,
						"",
						rule_record_id,
						null,
						1L,
						null);
			}
		}
	}

	/**
	 * 指定人员
	 */
	public void getAppointedEmployee(String param1,String param2,String param3,String param4,Long rule_record_id) throws Exception{
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id=${rule_record_id}};
		Long emp_id = Long.parseLong(param1);
		for(Long approver_id:#{select user_id from wfl_users_v
							where employee_id=${emp_id}}) {
			insertBpmInstanceNodeHirc(node_rule.recipient_sequence,
					approver_id,
					"",
					rule_record_id,
					null,
					1L,
					null);
		}
	}

	/**
	 * 指定岗位
	 */
	public void getAppointedPosition(String param1,String param2,String param3,String param4,Long rule_record_id) throws Exception{
		BpmnInstanceNodeRule node_rule = #{select * from bpmn_instance_node_rule where rule_record_id=${rule_record_id}};
		Long pos_id = Long.parseLong(param1);
		for(Long approver_id :#{select user_id 
						 from wfl_employee_assigns_v a,wfl_users_v u
						where a.position_id=${pos_id}
						  and a.employee_id=u.employee_id}) {
			insertBpmInstanceNodeHirc(node_rule.recipient_sequence,
					approver_id,
					"",
					rule_record_id,
					null,
					1L,
					null);
		}
	}
}